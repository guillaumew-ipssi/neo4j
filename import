// Import

// Import simple
// LOAD CSV FROM 'file:///northwind/categories.csv' AS row
// MERGE (category:Category {categoryID: toInteger(row[1])})

// Import avec prise en compte des headers et gestion des doublons
// LOAD CSV WITH HEADERS FROM 'file:///northwind/categories.csv' AS row
// MERGE (category:Category {categoryID: toInteger(row.CategoryID)})

// Import customers
LOAD CSV WITH HEADERS FROM "file:///northwind/customers.csv" AS row
CREATE (:Customer {companyName: row.CompanyName, customerID: row.CustomerID, fax: row.Fax, phone: row.Phone});

// Import products
LOAD CSV WITH HEADERS FROM "file:///northwind/products.csv" AS row
CREATE (:Product {productName: row.ProductName, productID: row.ProductID, unitPrice: toFloat(row.UnitPrice)});

// Import suppliers
LOAD CSV WITH HEADERS FROM "file:///northwind/suppliers.csv" AS row
CREATE (:Supplier {companyName: row.CompanyName, supplierID: row.SupplierID});

// Import employees
LOAD CSV WITH HEADERS FROM "file:///northwind/employees.csv" AS row
CREATE (:Employee {employeeID:row.EmployeeID,  firstName: row.FirstName, lastName: row.LastName, title: row.Title});

// Import categories
LOAD CSV WITH HEADERS FROM "file:///northwind/categories.csv" AS row
CREATE (:Category {categoryID: row.CategoryID, categoryName: row.CategoryName, description: row.Description});

// Import orders
LOAD CSV WITH HEADERS FROM "file:///northwind/orders.csv" AS row
MERGE (order:Order {orderID: row.OrderID}) ON CREATE SET order.shipName =  row.ShipName;
// Add constraint
CREATE CONSTRAINT ON (o:Order) ASSERT o.orderID IS UNIQUE;

// Add relation between orders and product
LOAD CSV WITH HEADERS FROM "file:///northwind/orders.csv" AS row
MATCH (order:Order {orderID: row.OrderID})
MATCH (product:Product {productID: row.ProductID})
MERGE (order)-[pu:PRODUCT]->(product)
ON CREATE SET pu.unitPrice = toFloat(row.UnitPrice), pu.quantity = toFloat(row.Quantity);

// Add relation between orders and employee
LOAD CSV WITH HEADERS FROM "file:///northwind/orders.csv" AS row
MATCH (order:Order {orderID: row.OrderID})
MATCH (employee:Employee {employeeID: row.EmployeeID})
MERGE (employee)-[:SOLD]->(order);

// Add relation between orders and customer
LOAD CSV WITH HEADERS FROM "file:///northwind/orders.csv" AS row
MATCH (order:Order {orderID: row.OrderID})
MATCH (customer:Customer {customerID: row.CustomerID})
MERGE (customer)-[:PURCHASED]->(order);

// Add relation between orders and product
LOAD CSV WITH HEADERS FROM "file:///northwind/products.csv" AS row
MATCH (product:Product {productID: row.ProductID})
MATCH (supplier:Supplier {supplierID: row.SupplierID})
MERGE (supplier)-[:SUPPLIES]->(product);

// Add relation between category and product
LOAD CSV WITH HEADERS FROM "file:///northwind/products.csv" AS row
MATCH (product:Product {productID: row.ProductID})
MATCH (category:Category {categoryID: row.CategoryID})
MERGE (product)-[:PART_OF]->(category);

// Add relation into employee between employee and manager
LOAD CSV WITH HEADERS FROM "file:///northwind/employees.csv" AS row
MATCH (employee:Employee {employeeID: row.EmployeeID})
MATCH (manager:Employee {employeeID: row.ReportsTo})
MERGE (employee)-[:REPORTS_TO]->(manager);
